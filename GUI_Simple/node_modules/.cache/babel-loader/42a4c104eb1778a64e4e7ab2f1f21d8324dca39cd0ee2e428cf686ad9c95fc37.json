{"ast":null,"code":"// import { login, findById } from \"@/api/member.js\";\nimport drf from '@/api/drf';\nimport Constant from \"@/common/Constant.js\";\nimport { createStore } from 'vuex';\nimport axios from \"axios\";\nexport default createStore({\n  state: {\n    // [] 배열, {} 맵\n    allPatientList: [],\n    patientSeriesList: {},\n    patientRecordList: [],\n    patientRecordFilenameList: []\n  },\n  getters: {\n    allPatientList: state => state.allPatientList,\n    patientSeriesList: state => state.patientSeriesList,\n    patientRecordList: state => state.patientRecordList,\n    patientRecordFilenameList: state => state.patientRecordFilenameList\n  },\n  mutations: {\n    [Constant.SET_ALLPATIENTLIST]: (state, allPatientList) => state.allPatientList = allPatientList,\n    [Constant.SET_PATIENTSERIESLIST]: (state, patientSeriesList) => state.patientSeriesList = patientSeriesList,\n    [Constant.SET_PATIENTRECORDLIST]: (state, patientRecordList) => state.patientRecordList = patientRecordList,\n    [Constant.SET_PATIENTRECORDFILENAMELIST]: (state, patientRecordFilenameList) => state.patientRecordFilenameList = patientRecordFilenameList\n  },\n  actions: {\n    [Constant.GET_ALLPATIENTLIST]({\n      commit\n    }) {\n      axios({\n        url: drf.patient.allPatientList(),\n        method: 'get'\n      }).then(res => {\n        // console.log(res.data.Result.Entities);\n        // (4) [{…}, {…}, {…}, {…}]\n        commit(Constant.SET_ALLPATIENTLIST, res.data.Result.Entities);\n      }).catch(err => console.error(err));\n    },\n    [Constant.GET_PATIENTSERIESLIST]({\n      commit\n    }, uid) {\n      // uid.target.value = chartID\n      axios({\n        url: drf.patient.patientSeriesList(uid.target.value),\n        method: 'get'\n      }).then(res => {\n        // res.data.Result.SeriesList.Entities = instanceUid list\n        // console.log(res.data.Result.SeriesList.Entities);\n        // {entity: Array(1), chartId: '20221013002'}\n        // 1.2.410.200062.2.1.20221222144825737.86.125615.843.799\n        const datas = {\n          entity: res.data.Result.SeriesList.Entities,\n          chartId: uid.target.value\n        };\n        // const newArr = datas.map(element => {\n        //   return element.UniqueID;\n        // });\n        // console.log(newArr);\n        commit(Constant.SET_PATIENTSERIESLIST, datas);\n      }).catch(err => console.error(err));\n    },\n    [Constant.GET_PATIENTRECORDLIST]({\n      commit\n    }, p_uid) {\n      axios({\n        url: drf.patient.patientRecordList(p_uid),\n        method: 'get'\n      }).then(res => {\n        console.log(res.data.Result.Entities);\n        commit(Constant.SET_PATIENTRECORDLIST, res.data.Result.Entities);\n      }).catch(err => console.error(err));\n    },\n    [Constant.GET_PATIENTRECORDFILENAMELIST]({\n      commit\n    }, datas) {\n      axios({\n        url: drf.patient.patientRecordFilenameList(datas.pn, datas.ix),\n        method: 'get'\n      }).then(res => {\n        console.log(res.data.patientRecordFilenameList);\n        commit(Constant.SET_PATIENTRECORDFILENAMELIST, res.data.patientRecordFilenameList);\n      }).catch(err => console.error(err));\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["drf","Constant","createStore","axios","state","allPatientList","patientSeriesList","patientRecordList","patientRecordFilenameList","getters","mutations","SET_ALLPATIENTLIST","SET_PATIENTSERIESLIST","SET_PATIENTRECORDLIST","SET_PATIENTRECORDFILENAMELIST","actions","GET_ALLPATIENTLIST","commit","url","patient","method","then","res","data","Result","Entities","catch","err","console","error","GET_PATIENTSERIESLIST","uid","target","value","datas","entity","SeriesList","chartId","GET_PATIENTRECORDLIST","p_uid","log","GET_PATIENTRECORDFILENAMELIST","pn","ix","modules"],"sources":["C:/Users/Osstem/Desktop/OS_Demo_FrontEnd/GUI_Simple/src/store/index.js"],"sourcesContent":["// import { login, findById } from \"@/api/member.js\";\nimport drf from '@/api/drf'\nimport Constant from \"@/common/Constant.js\";\nimport { createStore } from 'vuex'\nimport axios from \"axios\"\n\nexport default createStore({\n  state: {\n    // [] 배열, {} 맵\n    allPatientList: [],\n\n    patientSeriesList: {},\n\n    patientRecordList: [],\n\n    patientRecordFilenameList: [],\n  },\n\n  getters: {\n    allPatientList: state => state.allPatientList,\n\n    patientSeriesList: state => state.patientSeriesList,\n\n    patientRecordList: state => state.patientRecordList,\n\n    patientRecordFilenameList: state => state.patientRecordFilenameList,\n  },\n\n  mutations: {\n    [Constant.SET_ALLPATIENTLIST]: (state, allPatientList) => state.allPatientList = allPatientList,\n\n    [Constant.SET_PATIENTSERIESLIST]: (state, patientSeriesList) => state.patientSeriesList = patientSeriesList,\n\n    [Constant.SET_PATIENTRECORDLIST]: (state, patientRecordList) => state.patientRecordList = patientRecordList,\n\n    [Constant.SET_PATIENTRECORDFILENAMELIST]: (state, patientRecordFilenameList) => state.patientRecordFilenameList = patientRecordFilenameList,\n  },\n\n  actions: {\n    [Constant.GET_ALLPATIENTLIST]({ commit }) {\n      axios({\n        url: drf.patient.allPatientList(),\n        method: 'get'\n      })\n      .then(res => {\n        // console.log(res.data.Result.Entities);\n        // (4) [{…}, {…}, {…}, {…}]\n        commit(Constant.SET_ALLPATIENTLIST, res.data.Result.Entities)\n      })\n      .catch(err => console.error(err))\n    },\n\n    [Constant.GET_PATIENTSERIESLIST]({commit}, uid) {\n      // uid.target.value = chartID\n      axios({\n        url: drf.patient.patientSeriesList(uid.target.value),\n        method: 'get'\n      })\n      .then(res => {\n        // res.data.Result.SeriesList.Entities = instanceUid list\n        // console.log(res.data.Result.SeriesList.Entities);\n        // {entity: Array(1), chartId: '20221013002'}\n        // 1.2.410.200062.2.1.20221222144825737.86.125615.843.799\n        const datas = {\n          entity: res.data.Result.SeriesList.Entities,\n          chartId: uid.target.value\n        }\n        // const newArr = datas.map(element => {\n        //   return element.UniqueID;\n        // });\n        // console.log(newArr);\n        commit(Constant.SET_PATIENTSERIESLIST, datas);\n      })\n      .catch(err => console.error(err))\n    },\n\n    [Constant.GET_PATIENTRECORDLIST]({ commit }, p_uid) {\n      axios({\n        url: drf.patient.patientRecordList(p_uid),\n        method: 'get'\n      })\n      .then(res => {\n        console.log(res.data.Result.Entities);\n        commit(Constant.SET_PATIENTRECORDLIST, res.data.Result.Entities)\n      })\n      .catch(err => console.error(err))\n    },\n\n    [Constant.GET_PATIENTRECORDFILENAMELIST]({ commit }, datas) {\n      axios({\n        url: drf.patient.patientRecordFilenameList(datas.pn, datas.ix),\n        method: 'get'\n      })\n      .then(res => {\n        console.log(res.data.patientRecordFilenameList)\n        commit(Constant.SET_PATIENTRECORDFILENAMELIST, res.data.patientRecordFilenameList)\n      })\n      .catch(err => console.error(err))\n    },\n  },\n\n  modules: {\n  }\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}