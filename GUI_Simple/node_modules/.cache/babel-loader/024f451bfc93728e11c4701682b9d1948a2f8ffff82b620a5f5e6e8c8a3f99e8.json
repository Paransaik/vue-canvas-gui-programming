{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport '@/assets/css/utility.css';\nimport { xmlToJson } from '@/assets/js/x2j.js';\nimport axios from \"axios\";\nimport drf from '@/api/drf';\nimport { mapGetters, mapActions } from 'vuex';\nimport Constant from \"@/common/Constant.js\";\nimport VueDrawingCanvas from \"vue-drawing-canvas\";\nconst __default__ = {\n  name: 'BaseUtilityView',\n  components: {\n    VueDrawingCanvas\n  },\n  props: {},\n  data: () => ({\n    // disable: true,\n    disable: false,\n    rated: 0,\n    // Save marker\n    overlayes: [],\n    // Canvas\n    canvasHeight: 0,\n    canvasWidth: 0,\n    screenHeight: 0,\n    screenWidth: 0,\n    // 0, 0 coordinate set\n    maginTop: 0,\n    maginLeft: 0,\n    // 모든 마커 정보\n    strokes: [],\n    // utility ===================================================\n    lock: true,\n    // 1\n    imageArr: [],\n    dataInfo: {},\n    // 1-1\n    mouseFlag: false,\n    startTop: 0,\n    startLeft: 0,\n    movingTop: 0,\n    movingLeft: 0,\n    // 1-2\n    scale: 1.0,\n    // 1-3\n    startX: 0,\n    startY: 0,\n    endX: 0,\n    endY: 0,\n    // 2\n    brightness: 100,\n    inverse: 0,\n    // 3\n    lineColor: '#FF0000',\n    lineWidth: 1,\n    // 4\n    ang: 0,\n    rotX: 0,\n    rotY: 0,\n    // 1 f\n    first: {\n      pan: false,\n      zoom: false\n    },\n    // 2 s\n    second: {\n      bright: false,\n      inverse: false,\n      sharpen: false,\n      ruler: false,\n      tapeline: false,\n      draw: false\n    },\n    // 4 o\n    fourth: ['01', '02', '03', '04'],\n    preImage: '',\n    btnchg: false,\n    mainImg: require('@/assets/img/board.png'),\n    // canvas\n    initialImage: [{\n      type: \"dash\",\n      from: {\n        x: 262,\n        y: 154\n      },\n      coordinates: [],\n      color: '#FF0000',\n      width: 1,\n      fill: false\n    }],\n    downFlag: false,\n    x: 0,\n    y: 0,\n    preX: 0,\n    preY: 0,\n    image: \"\",\n    strokeType: \"dash\",\n    fillShape: false,\n    backgroundImage: null\n  }),\n  mounted() {\n    window.addEventListener('resize', this.handleResize);\n    // let canvas = document.querySelector('#VueDrawingCanvas');\n    const canvas = document.getElementById('canvas');\n    this.screenHeight = canvas.clientHeight;\n    this.canvasHeight = canvas.clientHeight;\n    this.screenWidth = canvas.clientWidth;\n    this.canvasWidth = canvas.clientWidth;\n    this.maginTop = this.canvasHeight / 2;\n    this.maginLeft = this.canvasWidth / 2;\n    const context = document.querySelector('#VueDrawingCanvas').getContext('2d');\n    context.translate(234 / 2, this.canvasHeight / 2);\n    context.beginPath();\n    context.arc(0, 0, 3, 0, 2 * Math.PI);\n    context.stroke();\n    console.log('tt');\n    // context.scale(this.canvasHeight/2, 234/2);\n    // const context = this.context ? this.context : canvas;\n    // canvas.getContext('2d').translate(this.maginTop, this.maginLeft);\n    /*if (\"vue-drawing-canvas\" in window.localStorage) {\r\n      this.initialImage = JSON.parse(\r\n          window.localStorage.getItem(\"vue-drawing-canvas\")\r\n      );\r\n    }*/\n  },\n  computed: {\n    ...mapGetters(['patientSeriesList'])\n  },\n  watch: {\n    ang: function (val) {\n      const canvas = document.getElementById('canvas');\n      if (val === 90 || val === 270) {\n        this.screenHeight = canvas.clientWidth;\n        this.canvasHeight = canvas.clientWidth;\n        this.screenWidth = canvas.clientHeight;\n        this.canvasWidth = canvas.clientHeight;\n      } else {\n        this.screenHeight = canvas.clientHeight;\n        this.canvasHeight = canvas.clientHeight;\n        this.screenWidth = canvas.clientWidth;\n        this.canvasWidth = canvas.clientWidth;\n      }\n    },\n    patientSeriesList: {\n      deep: true,\n      handler() {\n        this.mainImg = require('@/assets/img/board.png');\n        this.imageArr = [];\n        const ch = this.patientSeriesList.chartId;\n        this.patientSeriesList.entity.forEach(async e => {\n          const cr = e.Created;\n          // image\n          const url = await axios({\n            url: drf.patient.patientImgFileDownload(e.UniqueID),\n            method: 'get',\n            responseType: 'blob'\n          });\n          const im = URL.createObjectURL(new Blob([url.data], {\n            type: 'image/bmp'\n          }));\n          const dr = await axios({\n            url: drf.patient.drawImage(e.UniqueID),\n            method: 'get',\n            headers: {\n              \"Content-Type\": \"multipart/form-data\"\n            }\n          });\n          let Height, Width, hRate, wRate;\n          // xml to json\n          let XmlNode = new DOMParser().parseFromString(e.Tags, \"text/xml\");\n          const json = xmlToJson(XmlNode);\n          Height = json.tags.tags[0].tag[1][\"@attributes\"].value;\n          Width = json.tags.tags[0].tag[0][\"@attributes\"].value;\n          const h = e.PixelSpacingH;\n          const v = e.PixelSpacingV;\n          console.log(Height * h, Width * v);\n\n          // 이미지 마다 다른 것\n          this.imageArr.push({\n            // 차트ID\n            chartId: ch,\n            // 마커 정보\n            images: im,\n            // 마커 파일\n            drawMark: dr,\n            // 생성 일자\n            create: cr,\n            // 너비\n            pw: Height,\n            // 높이\n            ph: Width,\n            // 픽셀스페이싱 높이\n            PixelSpacingH: h,\n            // 픽셀스페이싱 너비\n            PixelSpacingW: v,\n            // y 비율:: one2 to web rate: 512 * pixcelspacing : fullHeight\n            one2webRate: {\n              y: hRate,\n              x: wRate\n            },\n            // 마커 배열\n            overl: dr.data.overlaies\n          });\n          await this.showInfo(this.imageArr[0]);\n        });\n      }\n    }\n  },\n  created() {},\n  methods: {\n    handleResize() {\n      // let canvas = document.querySelector('#VueDrawingCanvas');\n      const canvas = document.getElementById('canvas');\n      // const context = this.context ? this.context : canvas.getContext('2d');\n      if (this.ang === 90 || this.ang === 270) {\n        this.screenHeight = canvas.clientWidth;\n        this.canvasHeight = canvas.clientWidth;\n        this.screenWidth = canvas.clientHeight;\n        this.canvasWidth = canvas.clientHeight;\n      } else {\n        this.screenHeight = canvas.clientHeight;\n        this.canvasHeight = canvas.clientHeight;\n        this.screenWidth = canvas.clientWidth;\n        this.canvasWidth = canvas.clientWidth;\n      }\n      console.log();\n      this.maginTop = this.canvasHeight / 2;\n      this.maginLeft = this.canvasWidth / 2;\n\n      // canvas.viewport(0, 0, this.canvasWidth, this.canvasHeight);\n      // context.scale(1000/canvas.clientHeight, 1000/canvas.clientWidth);\n      this.$refs.VueCanvasDrawing.redraw();\n    },\n    checkedToggling(idx, name, bool) {\n      if (this.disable) {\n        console.log(name, idx[name]);\n        if (idx[name] === bool) {\n          this.first.pan = false;\n          this.second.bright = false;\n          this.second.ruler = false;\n          this.second.tapeline = false;\n          this.second.draw = false;\n          idx[name] = !bool;\n        }\n      }\n    },\n    // utility ===================================================\n    // 1-1\n    startMoving(e) {\n      if (this.first.pan && !this.mouseFlag) {\n        this.startTop = e.screenY;\n        this.startLeft = e.screenX;\n        this.mouseFlag = true;\n      }\n    },\n    moveImage(e) {\n      if (this.first.pan && this.mouseFlag) {\n        console.log('call');\n        this.movingTop += e.screenY - this.startTop;\n        this.startTop = e.screenY;\n        this.movingLeft += e.screenX - this.startLeft;\n        this.startLeft = e.screenX;\n      }\n    },\n    endMoving() {\n      if (this.first.pan && this.mouseFlag) {\n        this.mouseFlag = false;\n      }\n    },\n    // 1-2\n    changedScale(e) {\n      if (this.first.zoom) {\n        const rate = 0.002;\n        if (e.deltaY > 0 && this.scale >= 0.5 + rate) this.scale -= rate;else if (e.deltaY < 0 && this.scale <= 2.0 - rate) this.scale += rate;\n      }\n    },\n    // 1-3\n    async showInfo(node) {\n      this.disable = true;\n      // if (this.preImage !== '') {\n      //   this.preImage.setAttribute('style', '');\n      // }\n      // this.bindingWidthImg = 156;\n      this.mainImg = node.images;\n      // this.mainImg = 'https://png.pngtree.com/background/20210714/original/pngtree-pure-black-dark-background-wallpaper-picture-image_1218983.jpg';\n      // e.target.setAttribute('style', 'border: 2px solid blue');\n      // this.preImage = e.target;\n\n      this.pS = node.PixelSpacingH;\n      this.pW = node.pw;\n      this.rated = node.one2webRate;\n      // 마커 배열, y축 이미지 비율 크기, 팬 타입\n      // this.importImageDrawing(node.overl);\n    },\n\n    // 2-4\n    startCoordinate(e) {\n      if (this.second.ruler) {\n        this.getCoordinate(e);\n        this.startX = this.x;\n        this.startY = this.y;\n      }\n    },\n    endCoordinate(e) {\n      if (this.second.ruler) {\n        this.getCoordinate(e);\n        this.endX = this.x;\n        this.endY = this.y;\n        this.getDistance([this.getWeb2One({\n          x: this.startX,\n          y: this.startY\n        }), this.getWeb2One({\n          x: this.endX,\n          y: this.endY\n        })]);\n      }\n    },\n    getDistance(arr) {\n      // const rate = this.pW / this.fullHeight;\n      // const pixelSpacing = 0.10000000149011612;\n      const pixelSpacing = this.pS;\n      let distance = 0;\n      let x = arr[0].x;\n      let y = arr[0].y;\n      arr.forEach(a => {\n        distance += Math.pow(Math.pow(y - a.y, 2) + Math.pow(x - a.x, 2), 0.5) * pixelSpacing * 10;\n        x = a.x;\n        y = a.y;\n      });\n      // Number.EPSILON = 오차없이 나타낼수 있는 가장 작은 양의 수, 부동 소수점 오차를 보정\n      distance = Math.round((distance + Number.EPSILON) * 100) / 100;\n      return distance.toFixed(2) + ' mm';\n    },\n    // 2-1, 2-3\n    changedMouseEvent(e) {\n      if (this.downFlag && this.second.bright) {\n        this.lock = this.second.bright;\n        this.cnt++;\n        this.preX = this.x;\n        this.preY = this.y;\n        this.getCoordinate(e);\n        if (this.preX < this.x || this.preY < this.y) {\n          this.brightness += 2;\n        } else if (this.preX > this.x || this.preY > this.y) {\n          this.brightness -= 2;\n        }\n      }\n    },\n    // event\n    // 2-2, 4-1, 4-2, 4-3, 4-3\n    changedEvent(e) {\n      if (this.disable) {\n        if (e === 'inverse') {\n          // Change Inverse\n          // 2-2\n          if (this.second[e] === true) this.inverse = 100;else this.inverse = 0;\n        } else {\n          // Change Angle\n          // 4-1, 4-2, 4-3, 4-4\n          // @click=\"utilityEvent(i), send({'name' : k, 'state' : i }, [ang, rotX, rotY])\"\n          if (e === 0) {\n            this.ang = (this.ang + 90) % 360;\n          } else if (e === 1) {\n            if (this.ang === 0) this.ang = 360;\n            this.ang = (this.ang - 90) % 360;\n          } else if (e === 2) {\n            if (this.ang === 90 || this.ang === 270) {\n              this.rotX = this.rotX % 360 + 180;\n            } else {\n              this.rotY = this.rotY % 360 + 180;\n            }\n          } else if (e === 3) {\n            if (this.ang === 0 || this.ang === 180) {\n              this.rotX = this.rotX % 360 + 180;\n            } else {\n              this.rotY = this.rotY % 360 + 180;\n            }\n          }\n        }\n      }\n    },\n    // 2-4, 2-8, 2-9, 3-1\n    changedStrokeType(s) {\n      if (this.disable) {\n        if (s === 'zoom') {\n          this.lock = false;\n        } else if (s === 'ruler') {\n          this.strokeType = 'line';\n          this.lock = !this.second.ruler;\n        } else if (s === 'draw') {\n          this.strokeType = 'dash';\n          this.lock = !this.second.draw;\n        } else {\n          this.lock = true;\n        }\n      }\n    },\n    // 7-1, 7-2\n    clearView() {\n      this.first.pen = false;\n      this.first.zoom = false;\n      this.second.bright = false;\n      this.second.inverse = false;\n      this.second.sharpen = false;\n      this.scale = 1.0;\n      this.brightness = 100;\n      this.inverse = 0;\n      this.ang = 0;\n      this.rotX = 0;\n      this.rotY = 0;\n    },\n    /***\r\n     * One2         => Canvas  pen.style\r\n     * length       => line       0\r\n     * multi-length => tapeline\r\n     * angle        => line       0\r\n     * arrow        => line       1\r\n     * ellipse      => circle     1\r\n     * rectangle    => square     1\r\n     * freedraw     => dash       1\r\n     * */\n    // One2 --> Web\n    importImageDrawing(d) {\n      let canvas = document.querySelector('#VueDrawingCanvas');\n      const context = this.context ? this.context : canvas.getContext('2d');\n      let coordi;\n      let distance;\n      d.forEach(async m => {\n        console.log('importImageDrawing data');\n        this.lineColor = '#' + m.style.pen.color.substring(3, 9);\n        this.lineWidth = m.style.pen.width;\n        const stroke = {\n          type: '',\n          from: {\n            x: 0,\n            y: 0\n          },\n          coordinates: [],\n          color: this.lineColor,\n          width: this.lineWidth,\n          fill: false,\n          lineCap: \"round\",\n          lineJoin: \"round\"\n        };\n        switch (m.type) {\n          case \"freedraw\":\n            stroke.type = \"dash\";\n            coordi = this.getOne2Web(m.scene_pos['control-points'][0].x, m.scene_pos['control-points'][0].y);\n            stroke.from.x = coordi.x;\n            stroke.from.y = coordi.y;\n            m.scene_pos['control-points'].forEach(p => {\n              coordi = this.getOne2Web(p.x, p.y);\n              stroke.coordinates.push({\n                x: coordi.x,\n                y: coordi.y\n              });\n            });\n            this.$refs.VueCanvasDrawing.drawShape(context, stroke, false);\n            this.$refs.VueCanvasDrawing.images.push(stroke);\n            break;\n          case \"length\":\n            stroke.type = \"line\";\n            coordi = this.getOne2Web(m.scene_pos.start.x, m.scene_pos.start.y);\n            stroke.from.x = coordi.x;\n            stroke.from.y = coordi.y;\n            coordi = this.getOne2Web(m.scene_pos.end.x, m.scene_pos.end.y);\n            stroke.coordinates.push({\n              x: coordi.x,\n              y: coordi.y,\n              valueBox: m.scene_pos[\"value-box\"]\n            });\n            coordi = this.getOne2Web(m.scene_pos[\"value-box\"].x, m.scene_pos[\"value-box\"].y);\n            distance = this.getDistance([{\n              x: m.scene_pos.start.x,\n              y: m.scene_pos.start.y\n            }, {\n              x: m.scene_pos.end.x,\n              y: m.scene_pos.end.y\n            }]);\n            // 단위 표시하기\n            context.font = \"15px serif\";\n            context.textAlign = \"start\";\n            context.textBaseline = \"alphabetic\";\n            context.fillStyle = \"#ffff00\";\n            context.fillText(distance, coordi.x, coordi.y);\n            this.$refs.VueCanvasDrawing.drawShape(context, stroke, false);\n            this.$refs.VueCanvasDrawing.images.push(stroke);\n            // 선과 단위 잇기, 구현 중\n            break;\n          case \"multi-length\":\n            stroke.type = \"tapeline\";\n            coordi = this.getOne2Web(m.scene_pos['control-points'][0].x, m.scene_pos['control-points'][0].y);\n            stroke.from.x = coordi.x;\n            stroke.from.y = coordi.y;\n            m.scene_pos['control-points'].forEach(p => {\n              coordi = this.getOne2Web(p.x, p.y);\n              stroke.coordinates.push({\n                x: coordi.x,\n                y: coordi.y\n              });\n            });\n            coordi = this.getOne2Web(m.scene_pos[\"value-box\"].x, m.scene_pos[\"value-box\"].y);\n            distance = this.getDistance(m.scene_pos['control-points']);\n            // 단위 표시하기\n            context.font = \"15px serif\";\n            context.textAlign = \"start\";\n            context.textBaseline = \"alphabetic\";\n            context.fillStyle = \"#ffff00\";\n            context.fillText(distance, coordi.x, coordi.y);\n            this.$refs.VueCanvasDrawing.drawShape(context, stroke, false);\n            this.$refs.VueCanvasDrawing.images.push(stroke);\n            break;\n        }\n      });\n    },\n    // Web --> One2\n    async save() {\n      await this.getRefImage2Overlayes();\n      var data = {\n        \"manipulate\": {\n          \"effect\": {\n            \"invert\": this.second.inverse,\n            \"sharpen\": 0\n          },\n          \"windowing\": {\n            \"wc\": 1000,\n            \"ww\": 4000\n          }\n        },\n        \"overlaies\": this.overlayes\n      };\n\n      // const obj = JSON.parse(json);\n      const s = JSON.stringify(data);\n      axios({\n        url: drf.patient.saveDrwingMarker('1.2.410.200062.2.1.20221222144825737.86.125615.843.799'),\n        method: 'post',\n        data: s\n      });\n    },\n    // async setImage(event) {\n    //   let URL = window.URL;\n    //   this.backgroundImage = URL.createObjectURL(event.target.files[0]);\n    //   await this.$refs.VueCanvasDrawing.redraw();\n    // },\n\n    getCoordinate(event) {\n      let coordinates = this.$refs.VueCanvasDrawing.getCoordinates(event);\n      this.x = coordinates.x;\n      this.y = coordinates.y;\n    },\n    getOne2Web(coordiX, coordiY) {\n      return {\n        x: coordiX * this.rated + this.maginLeft,\n        y: coordiY * this.rated + this.canvasHeight\n      };\n    },\n    getWeb2One(coordiX, coordiY) {\n      return {\n        x: (coordiX - this.maginLeft) / this.rated,\n        y: (coordiY - this.canvasHeight) / this.rated\n      };\n    },\n    /***\r\n     * Canvas     => One2         pen.style\r\n     * line       => length         0\r\n     * tapeline   => multi-length\r\n     * angle      => angle          0\r\n     * arrow      => arrow          1\r\n     * ellipse    => circle         1\r\n     * rectangle  => square         1\r\n     * dash       => freedraw       1\r\n     * */\n    // Web --> One2\n    getRefImage2Overlayes() {\n      this.$refs.VueCanvasDrawing.images.forEach(e => {\n        console.log(e);\n        const data = {\n          \"style\": {}\n        };\n        let coordi, coordi2;\n        const scene_pos = {};\n        const start = {},\n          end = {};\n        const value_box = {};\n        let dataType;\n        let newArr;\n        switch (e.type) {\n          case \"dash\":\n            newArr = e.coordinates.map(c => {\n              coordi = this.getWeb2One(c.x, c.y);\n              return {\n                x: coordi.x,\n                y: coordi.y\n              };\n            });\n            scene_pos[\"control-points\"] = newArr;\n            data[\"style\"][\"brush\"] = {\n              \"color\": \"#00ffffff\"\n            };\n            dataType = \"freedraw\";\n            break;\n          case \"line\":\n            coordi = this.getWeb2One(e.from.x, e.from.y);\n            start[\"x\"] = coordi.x;\n            start[\"y\"] = coordi.y;\n            coordi = this.getWeb2One(e.coordinates[0].x, e.coordinates[0].y);\n            end[\"x\"] = coordi.x;\n            end[\"y\"] = coordi.y;\n            value_box[\"x\"] = e.coordinates[0].valueBox.x;\n            value_box[\"y\"] = e.coordinates[0].valueBox.y;\n            scene_pos[\"start\"] = start;\n            scene_pos[\"end\"] = end;\n            scene_pos[\"value-box\"] = value_box;\n            data[\"style\"][\"value-box\"] = {\n              \"brush\": {\n                \"color\": \"#00ffffff\"\n              },\n              \"pen\": {\n                \"cap\": 32,\n                \"color\": \"#00ffffff\",\n                \"join\": 128,\n                \"style\": 0,\n                \"width\": 0\n              },\n              \"text\": {\n                \"color\": \"#ffffd700\",\n                \"font-size\": 12\n              }\n            };\n            dataType = \"length\";\n            break;\n          case \"tapeline\":\n            break;\n          case \"angle\":\n            break;\n          case \"arrow\":\n            coordi = this.getWeb2One(e.from.x, e.from.y);\n            start[\"x\"] = coordi.x;\n            start[\"y\"] = coordi.y;\n            coordi = this.getWeb2One(e.coordinates[0].x, e.coordinates[0].y);\n            end[\"x\"] = coordi.x;\n            end[\"y\"] = coordi.y;\n            scene_pos[\"start\"] = start;\n            scene_pos[\"end\"] = end;\n            data[\"style\"][\"brush\"] = {\n              \"color\": \"#00ffffff\"\n            };\n            dataType = \"arrow\";\n            break;\n          case \"circle\":\n            coordi = this.getWeb2One(e.coordinates[0].x - e.coordinates[1].x, e.coordinates[0].y - e.coordinates[1].y);\n            coordi2 = this.getWeb2One(e.coordinates[0].x + e.coordinates[1].x, e.coordinates[0].y + e.coordinates[1].y);\n            scene_pos[\"bottom\"] = coordi2.y;\n            scene_pos[\"left\"] = coordi.x;\n            scene_pos[\"right\"] = coordi2.x;\n            scene_pos[\"top\"] = coordi.y;\n            data[\"style\"][\"brush\"] = {\n              \"color\": \"#00ffffff\"\n            };\n            dataType = \"ellipse\";\n            break;\n          case \"square\":\n            // from:: 시작점, left - top\n            coordi = this.getWeb2One(e.coordinates[3].x, e.coordinates[3].y);\n            coordi2 = this.getWeb2One(e.coordinates[1].x, e.coordinates[1].y);\n            scene_pos[\"bottom\"] = coordi2.y;\n            scene_pos[\"left\"] = coordi.x;\n            scene_pos[\"right\"] = coordi2.x;\n            scene_pos[\"top\"] = coordi.y;\n            data[\"style\"][\"brush\"] = {\n              \"color\": \"#00ffffff\"\n            };\n            dataType = \"rectangle\";\n            break;\n        }\n        if (e.coordinates.length !== 0) {\n          // 1. scene_pos\n          data[\"scene_pos\"] = scene_pos;\n          // 2. style\n          data[\"style\"][\"pen\"] = {\n            \"cap\": 32,\n            \"color\": '#ff' + e.color.substring(1),\n            \"join\": 128,\n            \"style\": 1,\n            \"width\": e.width\n          };\n          // 3. transformation\n          data[\"transformation\"] = {\n            \"rot_deg\": 0\n          };\n          // 4. type\n          data[\"type\"] = dataType;\n          console.log(data);\n          this.overlayes.push(data);\n        }\n      });\n    },\n    ...mapActions([Constant.GET_PATIENTSERIESLIST])\n  }\n};\nimport { useCssVars as _useCssVars } from 'vue';\nconst __injectCSSVars__ = () => {\n  _useCssVars(_ctx => ({\n    \"635c36aa-screenHeight\": _ctx.screenHeight,\n    \"635c36aa-screenWidth\": _ctx.screenWidth,\n    \"635c36aa-movingTop\": _ctx.movingTop,\n    \"635c36aa-movingLeft\": _ctx.movingLeft,\n    \"635c36aa-brightness\": _ctx.brightness,\n    \"635c36aa-inverse\": _ctx.inverse,\n    \"635c36aa-scale\": _ctx.scale,\n    \"635c36aa-ang\": _ctx.ang,\n    \"635c36aa-rotX\": _ctx.rotX,\n    \"635c36aa-rotY\": _ctx.rotY,\n    \"635c36aa-canvasHeight\": _ctx.canvasHeight,\n    \"635c36aa-canvasWidth\": _ctx.canvasWidth\n  }));\n};\nconst __setup__ = __default__.setup;\n__default__.setup = __setup__ ? (props, ctx) => {\n  __injectCSSVars__();\n  return __setup__(props, ctx);\n} : __injectCSSVars__;\nexport default __default__;","map":{"version":3,"mappings":"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","names":["xmlToJson","axios","drf","mapGetters","mapActions","Constant","VueDrawingCanvas","__default__","name","components","props","data","disable","rated","overlayes","canvasHeight","canvasWidth","screenHeight","screenWidth","maginTop","maginLeft","strokes","lock","imageArr","dataInfo","mouseFlag","startTop","startLeft","movingTop","movingLeft","scale","startX","startY","endX","endY","brightness","inverse","lineColor","lineWidth","ang","rotX","rotY","first","pan","zoom","second","bright","sharpen","ruler","tapeline","draw","fourth","preImage","btnchg","mainImg","require","initialImage","type","from","x","y","coordinates","color","width","fill","downFlag","preX","preY","image","strokeType","fillShape","backgroundImage","mounted","window","addEventListener","handleResize","canvas","document","getElementById","clientHeight","clientWidth","context","querySelector","getContext","translate","beginPath","arc","Math","PI","stroke","console","log","computed","watch","val","patientSeriesList","deep","handler","ch","chartId","entity","forEach","e","cr","Created","url","patient","patientImgFileDownload","UniqueID","method","responseType","im","URL","createObjectURL","Blob","dr","drawImage","headers","Height","Width","hRate","wRate","XmlNode","DOMParser","parseFromString","Tags","json","tags","tag","value","h","PixelSpacingH","v","PixelSpacingV","push","images","drawMark","create","pw","ph","PixelSpacingW","one2webRate","overl","overlaies","showInfo","created","methods","$refs","VueCanvasDrawing","redraw","checkedToggling","idx","bool","startMoving","screenY","screenX","moveImage","endMoving","changedScale","rate","deltaY","node","pS","pW","startCoordinate","getCoordinate","endCoordinate","getDistance","getWeb2One","arr","pixelSpacing","distance","a","pow","round","Number","EPSILON","toFixed","changedMouseEvent","cnt","changedEvent","changedStrokeType","s","clearView","pen","importImageDrawing","d","coordi","m","style","substring","lineCap","lineJoin","getOne2Web","scene_pos","p","drawShape","start","end","valueBox","font","textAlign","textBaseline","fillStyle","fillText","save","getRefImage2Overlayes","JSON","stringify","saveDrwingMarker","event","getCoordinates","coordiX","coordiY","coordi2","value_box","dataType","newArr","map","c","length","GET_PATIENTSERIESLIST"],"sourceRoot":"","sources":["C:\\Users\\Osstem\\Desktop\\OS_Demo_FrontEnd\\GUI_Simple\\src\\components\\BaseHaederView.vue"],"sourcesContent":["<template>\r\n  <div class=\"baseHeaderView\">\r\n    <div class=\"utilityView\">\r\n      <div class=\"itemBox\">\r\n        <div\r\n            class=\"item\"\r\n            v-for=\"(v, k) in first\" :key=\"k\"\r\n            @click=\"checkedToggling(first, k, v), changedStrokeType(k)\"\r\n            :class=\"{isToggle:v && disable}\">\r\n          <img :src=\"require(`@/assets/img/utils/icon-${k}.png`)\"/>\r\n        </div>\r\n      </div>\r\n      <div class=\"line\"></div>\r\n\r\n      <div class=\"itemBox\">\r\n        <div\r\n            class=\"item\"\r\n            v-for=\"(v, k) in second\" :key=\"k\"\r\n            @click=\"checkedToggling(second, k, v), changedStrokeType(k), changedEvent(k)\"\r\n            :class=\"{isToggle:v && disable}\">\r\n          <img :src=\"require(`@/assets/img/utils/icon-${k}.png`)\"/>\r\n        </div>\r\n        <div>\r\n          <input type=\"color\" class=\"item\" v-model=\"lineColor\"/>\r\n        </div>\r\n        <select class=\"colorSelect\" v-model=\"lineWidth\">\r\n          <option v-for=\"n in 25\" :key=\"n\" :value=\"n\">\r\n            {{ n }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n      <div class=\"line\"></div>\r\n\r\n      <div class=\"itemBox\">\r\n        <div\r\n            class=\"item\"\r\n            v-for=\"(k, i) in fourth\" :key=\"k\"\r\n            @click=\"changedEvent(i)\">\r\n          <img :src=\"require(`@/assets/img/utils/icon-${k}.png`)\"/>\r\n        </div>\r\n      </div>\r\n      <div class=\"line\"></div>\r\n\r\n      <div class=\"itemBox\">\r\n        <button class=\"item same\" @click.prevent=\"$refs.VueCanvasDrawing.undo()\">U</button>\r\n        <button class=\"item same\" @click.prevent=\"$refs.VueCanvasDrawing.redo()\">R</button>\r\n        <button class=\"item same\" @click.prevent=\"save\">S</button>\r\n        <!-- 회전 초기화-->\r\n        <button class=\"item same\" @click=\"clearView\">View</button>\r\n        <!-- 회전, 그림 초기화-->\r\n        <button class=\"item same\" @click=\"clearView\" @click.prevent=\"$refs.VueCanvasDrawing.reset()\">A</button>\r\n        {{ x }} {{ y }}\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"baseUtilityView\" id=\"canvas\"\r\n         @mousedown=\"startMoving($event)\"\r\n         @mousemove=\"moveImage($event)\"\r\n         @mouseup=\"endMoving\"\r\n         @mouseleave=\"endMoving\"\r\n    >\r\n      <img :src=\"mainImg\" :class=\"{ sharpen:second['sharpen'] }\" class=\"mainImg utilityEvent\"/>\r\n      <VueDrawingCanvas\r\n          ref=\"VueCanvasDrawing\"\r\n          v-model:image=\"image\"\r\n          :stroke-type=\"strokeType\"\r\n          :fill-shape=\"fillShape\"\r\n          :backgroundImage=\"backgroundImage\"\r\n          :height=\"canvasHeight\"\r\n          :width=\"234\"\r\n          :lock=\"lock\"\r\n          :color=lineColor\r\n          :lineWidth=lineWidth\r\n          @mousedown=\"downFlag = !downFlag, startCoordinate($event)\"\r\n          @mousemove=\"changedMouseEvent($event), getCoordinate($event)\"\r\n          @mouseup=\"downFlag = !downFlag, endCoordinate($event)\"\r\n          @wheel=\"changedScale\"\r\n          saveAs=\"png\"\r\n          line-cap=\"round\"\r\n          line-join=\"round\"\r\n          :initial-image=\"initialImage\"\r\n          classes=\"canvasEvent\"\r\n          :styles=\"{ }\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport '@/assets/css/utility.css';\r\nimport {xmlToJson} from '@/assets/js/x2j.js';\r\n\r\nimport axios from \"axios\";\r\nimport drf from '@/api/drf';\r\nimport {mapGetters, mapActions} from 'vuex';\r\nimport Constant from \"@/common/Constant.js\";\r\nimport VueDrawingCanvas from \"vue-drawing-canvas\";\r\n\r\nexport default {\r\n  name: 'BaseUtilityView',\r\n\r\n  components: {\r\n    VueDrawingCanvas,\r\n  },\r\n\r\n  props: {},\r\n\r\n  data: () => ({\r\n    // disable: true,\r\n    disable: false,\r\n    rated: 0,\r\n\r\n    // Save marker\r\n    overlayes: [],\r\n\r\n    // Canvas\r\n    canvasHeight: 0,\r\n    canvasWidth: 0,\r\n    screenHeight: 0,\r\n    screenWidth: 0,\r\n    // 0, 0 coordinate set\r\n    maginTop: 0,\r\n    maginLeft: 0,\r\n\r\n    // 모든 마커 정보\r\n    strokes: [],\r\n\r\n    // utility ===================================================\r\n    lock: true,\r\n    // 1\r\n    imageArr: [],\r\n    dataInfo: {},\r\n\r\n    // 1-1\r\n    mouseFlag: false,\r\n    startTop: 0,\r\n    startLeft: 0,\r\n    movingTop: 0,\r\n    movingLeft: 0,\r\n    // 1-2\r\n    scale: 1.0,\r\n    // 1-3\r\n    startX: 0,\r\n    startY: 0,\r\n    endX: 0,\r\n    endY: 0,\r\n\r\n    // 2\r\n    brightness: 100,\r\n    inverse: 0,\r\n    // 3\r\n    lineColor: '#FF0000',\r\n    lineWidth: 1,\r\n    // 4\r\n    ang: 0,\r\n    rotX: 0,\r\n    rotY: 0,\r\n\r\n    // 1 f\r\n    first: {\r\n      pan: false,\r\n      zoom: false,\r\n    },\r\n    // 2 s\r\n    second: {\r\n      bright: false,\r\n      inverse: false,\r\n      sharpen: false,\r\n      ruler: false,\r\n      tapeline: false,\r\n      draw: false\r\n    },\r\n    // 4 o\r\n    fourth: ['01', '02', '03', '04'],\r\n\r\n    preImage: '',\r\n    btnchg: false,\r\n\r\n    mainImg: require('@/assets/img/board.png'),\r\n\r\n    // canvas\r\n    initialImage: [{\r\n      type: \"dash\",\r\n      from: {\r\n        x: 262,\r\n        y: 154,\r\n      },\r\n      coordinates: [],\r\n      color: '#FF0000',\r\n      width: 1,\r\n      fill: false,\r\n    }],\r\n\r\n    downFlag: false,\r\n    x: 0,\r\n    y: 0,\r\n    preX: 0,\r\n    preY: 0,\r\n    image: \"\",\r\n    strokeType: \"dash\",\r\n    fillShape: false,\r\n    backgroundImage: null,\r\n  }),\r\n\r\n  mounted() {\r\n    window.addEventListener('resize', this.handleResize);\r\n    // let canvas = document.querySelector('#VueDrawingCanvas');\r\n    const canvas = document.getElementById('canvas');\r\n    this.screenHeight = canvas.clientHeight;\r\n    this.canvasHeight = canvas.clientHeight;\r\n    this.screenWidth = canvas.clientWidth;\r\n    this.canvasWidth = canvas.clientWidth;\r\n    this.maginTop = this.canvasHeight / 2;\r\n    this.maginLeft = this.canvasWidth / 2;\r\n    const context = document.querySelector('#VueDrawingCanvas').getContext('2d');\r\n    context.translate(234/2, this.canvasHeight/2);\r\n    context.beginPath();\r\n    context.arc(0, 0, 3, 0, 2 * Math.PI);\r\n    context.stroke();\r\n    console.log('tt');\r\n    // context.scale(this.canvasHeight/2, 234/2);\r\n    // const context = this.context ? this.context : canvas;\r\n    // canvas.getContext('2d').translate(this.maginTop, this.maginLeft);\r\n    /*if (\"vue-drawing-canvas\" in window.localStorage) {\r\n      this.initialImage = JSON.parse(\r\n          window.localStorage.getItem(\"vue-drawing-canvas\")\r\n      );\r\n    }*/\r\n  }, computed: {\r\n    ...mapGetters([\r\n      'patientSeriesList',\r\n    ]),\r\n  },\r\n\r\n  watch: {\r\n    ang: function(val) {\r\n      const canvas = document.getElementById('canvas');\r\n      if (val === 90 || val === 270) {\r\n        this.screenHeight = canvas.clientWidth;\r\n        this.canvasHeight = canvas.clientWidth;\r\n        this.screenWidth = canvas.clientHeight;\r\n        this.canvasWidth = canvas.clientHeight;\r\n      } else {\r\n        this.screenHeight = canvas.clientHeight;\r\n        this.canvasHeight = canvas.clientHeight;\r\n        this.screenWidth = canvas.clientWidth;\r\n        this.canvasWidth = canvas.clientWidth;\r\n      }\r\n    },\r\n    patientSeriesList: {\r\n      deep: true,\r\n      handler() {\r\n        this.mainImg = require('@/assets/img/board.png');\r\n        this.imageArr = [];\r\n\r\n        const ch = this.patientSeriesList.chartId;\r\n        this.patientSeriesList.entity.forEach(async e => {\r\n          const cr = e.Created;\r\n          // image\r\n          const url = await axios({\r\n            url: drf.patient.patientImgFileDownload(e.UniqueID),\r\n            method: 'get',\r\n            responseType: 'blob',\r\n          })\r\n          const im = URL.createObjectURL(new Blob([url.data], {type: 'image/bmp'}));\r\n\r\n          const dr = await axios({\r\n            url: drf.patient.drawImage(e.UniqueID),\r\n            method: 'get',\r\n            headers: {\r\n              \"Content-Type\": \"multipart/form-data\"\r\n            }\r\n          })\r\n\r\n          let Height, Width, hRate, wRate;\r\n          // xml to json\r\n          let XmlNode = new DOMParser().parseFromString(e.Tags, \"text/xml\");\r\n          const json = xmlToJson(XmlNode);\r\n          Height = json.tags.tags[0].tag[1][\"@attributes\"].value;\r\n          Width = json.tags.tags[0].tag[0][\"@attributes\"].value;\r\n\r\n          const h = e.PixelSpacingH;\r\n          const v = e.PixelSpacingV;\r\n          console.log(Height * h, Width * v);\r\n\r\n          // 이미지 마다 다른 것\r\n          this.imageArr.push({\r\n            // 차트ID\r\n            chartId: ch,\r\n            // 마커 정보\r\n            images: im,\r\n            // 마커 파일\r\n            drawMark: dr,\r\n            // 생성 일자\r\n            create: cr,\r\n            // 너비\r\n            pw: Height,\r\n            // 높이\r\n            ph: Width,\r\n            // 픽셀스페이싱 높이\r\n            PixelSpacingH: h,\r\n            // 픽셀스페이싱 너비\r\n            PixelSpacingW: v,\r\n            // y 비율:: one2 to web rate: 512 * pixcelspacing : fullHeight\r\n            one2webRate: {y: hRate, x: wRate},\r\n            // 마커 배열\r\n            overl: dr.data.overlaies,\r\n          })\r\n\r\n          await this.showInfo(this.imageArr[0]);\r\n        })\r\n      }\r\n    }\r\n  },\r\n\r\n  created() {\r\n  },\r\n\r\n  methods: {\r\n    handleResize() {\r\n      // let canvas = document.querySelector('#VueDrawingCanvas');\r\n      const canvas = document.getElementById('canvas');\r\n      // const context = this.context ? this.context : canvas.getContext('2d');\r\n      if (this.ang === 90 || this.ang === 270) {\r\n        this.screenHeight = canvas.clientWidth;\r\n        this.canvasHeight = canvas.clientWidth;\r\n        this.screenWidth = canvas.clientHeight;\r\n        this.canvasWidth = canvas.clientHeight;\r\n      } else {\r\n        this.screenHeight = canvas.clientHeight;\r\n        this.canvasHeight = canvas.clientHeight;\r\n        this.screenWidth = canvas.clientWidth;\r\n        this.canvasWidth = canvas.clientWidth;\r\n      }\r\n      console.log()\r\n      this.maginTop = this.canvasHeight / 2;\r\n      this.maginLeft = this.canvasWidth / 2;\r\n\r\n      // canvas.viewport(0, 0, this.canvasWidth, this.canvasHeight);\r\n      // context.scale(1000/canvas.clientHeight, 1000/canvas.clientWidth);\r\n      this.$refs.VueCanvasDrawing.redraw();\r\n    },\r\n\r\n    checkedToggling(idx, name, bool) {\r\n      if (this.disable) {\r\n        console.log(name, idx[name])\r\n        if (idx[name] === bool) {\r\n          this.first.pan = false;\r\n          this.second.bright = false;\r\n          this.second.ruler = false;\r\n          this.second.tapeline = false;\r\n          this.second.draw = false;\r\n          idx[name] = !bool;\r\n        }\r\n      }\r\n    },\r\n\r\n    // utility ===================================================\r\n    // 1-1\r\n    startMoving(e) {\r\n      if (this.first.pan && !this.mouseFlag) {\r\n        this.startTop = e.screenY;\r\n        this.startLeft = e.screenX;\r\n        this.mouseFlag = true;\r\n      }\r\n    },\r\n    moveImage(e) {\r\n      if (this.first.pan && this.mouseFlag) {\r\n        console.log('call');\r\n        this.movingTop += e.screenY - this.startTop;\r\n        this.startTop = e.screenY;\r\n        this.movingLeft += e.screenX - this.startLeft;\r\n        this.startLeft = e.screenX;\r\n      }\r\n    },\r\n    endMoving() {\r\n      if (this.first.pan && this.mouseFlag) {\r\n        this.mouseFlag = false;\r\n      }\r\n    },\r\n\r\n    // 1-2\r\n    changedScale(e) {\r\n      if (this.first.zoom) {\r\n        const rate = 0.002;\r\n        if (e.deltaY > 0 && this.scale >= 0.5 + rate) this.scale -= rate;\r\n        else if (e.deltaY < 0 && this.scale <= 2.0 - rate) this.scale += rate;\r\n      }\r\n    },\r\n\r\n    // 1-3\r\n    async showInfo(node) {\r\n      this.disable = true;\r\n      // if (this.preImage !== '') {\r\n      //   this.preImage.setAttribute('style', '');\r\n      // }\r\n      // this.bindingWidthImg = 156;\r\n      this.mainImg = node.images;\r\n      // this.mainImg = 'https://png.pngtree.com/background/20210714/original/pngtree-pure-black-dark-background-wallpaper-picture-image_1218983.jpg';\r\n      // e.target.setAttribute('style', 'border: 2px solid blue');\r\n      // this.preImage = e.target;\r\n\r\n      this.pS = node.PixelSpacingH;\r\n      this.pW = node.pw;\r\n      this.rated = node.one2webRate;\r\n      // 마커 배열, y축 이미지 비율 크기, 팬 타입\r\n      // this.importImageDrawing(node.overl);\r\n    },\r\n\r\n    // 2-4\r\n    startCoordinate(e) {\r\n      if (this.second.ruler) {\r\n        this.getCoordinate(e);\r\n        this.startX = this.x;\r\n        this.startY = this.y;\r\n      }\r\n    },\r\n    endCoordinate(e) {\r\n      if (this.second.ruler) {\r\n        this.getCoordinate(e);\r\n        this.endX = this.x;\r\n        this.endY = this.y;\r\n        this.getDistance([this.getWeb2One({x: this.startX, y: this.startY}),\r\n          this.getWeb2One({x: this.endX, y: this.endY})]);\r\n      }\r\n    },\r\n    getDistance(arr) {\r\n      // const rate = this.pW / this.fullHeight;\r\n      // const pixelSpacing = 0.10000000149011612;\r\n      const pixelSpacing = this.pS;\r\n      let distance = 0;\r\n      let x = arr[0].x;\r\n      let y = arr[0].y;\r\n      arr.forEach(a => {\r\n        distance += Math.pow(Math.pow(y - a.y, 2) + Math.pow(x - a.x, 2), 0.5) * pixelSpacing * 10;\r\n        x = a.x;\r\n        y = a.y;\r\n      });\r\n      // Number.EPSILON = 오차없이 나타낼수 있는 가장 작은 양의 수, 부동 소수점 오차를 보정\r\n      distance = Math.round((distance + Number.EPSILON) * 100) / 100;\r\n      return distance.toFixed(2) + ' mm';\r\n    },\r\n\r\n    // 2-1, 2-3\r\n    changedMouseEvent(e) {\r\n      if (this.downFlag && this.second.bright) {\r\n        this.lock = this.second.bright;\r\n        this.cnt++;\r\n        this.preX = this.x;\r\n        this.preY = this.y;\r\n        this.getCoordinate(e);\r\n        if (this.preX < this.x || this.preY < this.y) {\r\n          this.brightness += 2;\r\n        } else if (this.preX > this.x || this.preY > this.y) {\r\n          this.brightness -= 2;\r\n        }\r\n      }\r\n    },\r\n\r\n    // event\r\n    // 2-2, 4-1, 4-2, 4-3, 4-3\r\n    changedEvent(e) {\r\n      if (this.disable) {\r\n        if (e === 'inverse') {\r\n          // Change Inverse\r\n          // 2-2\r\n          if (this.second[e] === true) this.inverse = 100;\r\n          else this.inverse = 0;\r\n        } else {\r\n          // Change Angle\r\n          // 4-1, 4-2, 4-3, 4-4\r\n          // @click=\"utilityEvent(i), send({'name' : k, 'state' : i }, [ang, rotX, rotY])\"\r\n          if (e === 0) {\r\n            this.ang = (this.ang + 90) % 360\r\n          } else if (e === 1) {\r\n            if (this.ang === 0) this.ang = 360;\r\n            this.ang = (this.ang - 90) % 360\r\n          } else if (e === 2) {\r\n            if (this.ang === 90 || this.ang === 270) {\r\n              this.rotX = (this.rotX % 360) + 180;\r\n            } else {\r\n              this.rotY = (this.rotY % 360) + 180;\r\n            }\r\n          } else if (e === 3) {\r\n            if (this.ang === 0 || this.ang === 180) {\r\n              this.rotX = (this.rotX % 360) + 180;\r\n            } else {\r\n              this.rotY = (this.rotY % 360) + 180;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    // 2-4, 2-8, 2-9, 3-1\r\n    changedStrokeType(s) {\r\n      if (this.disable) {\r\n        if (s === 'zoom') {\r\n          this.lock = false;\r\n        } else if (s === 'ruler') {\r\n          this.strokeType = 'line';\r\n          this.lock = !this.second.ruler;\r\n        } else if (s === 'draw') {\r\n          this.strokeType = 'dash';\r\n          this.lock = !this.second.draw;\r\n        } else {\r\n          this.lock = true;\r\n        }\r\n      }\r\n    },\r\n\r\n    // 7-1, 7-2\r\n    clearView() {\r\n      this.first.pen = false;\r\n      this.first.zoom = false;\r\n\r\n      this.second.bright = false;\r\n      this.second.inverse = false;\r\n      this.second.sharpen = false;\r\n\r\n      this.scale = 1.0;\r\n\r\n      this.brightness = 100;\r\n      this.inverse = 0;\r\n\r\n      this.ang = 0;\r\n      this.rotX = 0;\r\n      this.rotY = 0;\r\n    },\r\n\r\n    /***\r\n     * One2         => Canvas  pen.style\r\n     * length       => line       0\r\n     * multi-length => tapeline\r\n     * angle        => line       0\r\n     * arrow        => line       1\r\n     * ellipse      => circle     1\r\n     * rectangle    => square     1\r\n     * freedraw     => dash       1\r\n     * */\r\n    // One2 --> Web\r\n    importImageDrawing(d) {\r\n      let canvas = document.querySelector('#VueDrawingCanvas');\r\n      const context = this.context ? this.context : canvas.getContext('2d');\r\n      let coordi;\r\n      let distance;\r\n      d.forEach(async m => {\r\n        console.log('importImageDrawing data');\r\n        this.lineColor = '#' + m.style.pen.color.substring(3, 9);\r\n        this.lineWidth = m.style.pen.width;\r\n        const stroke = {\r\n          type: '',\r\n          from: {\r\n            x: 0,\r\n            y: 0,\r\n          },\r\n          coordinates: [],\r\n          color: this.lineColor,\r\n          width: this.lineWidth,\r\n          fill: false,\r\n          lineCap: \"round\",\r\n          lineJoin: \"round\",\r\n        };\r\n\r\n        switch (m.type) {\r\n          case \"freedraw\":\r\n            stroke.type = \"dash\";\r\n            coordi = this.getOne2Web(m.scene_pos['control-points'][0].x, m.scene_pos['control-points'][0].y);\r\n            stroke.from.x = coordi.x;\r\n            stroke.from.y = coordi.y;\r\n            m.scene_pos['control-points'].forEach(p => {\r\n              coordi = this.getOne2Web(p.x, p.y);\r\n              stroke.coordinates.push({x: coordi.x, y: coordi.y});\r\n            })\r\n            this.$refs.VueCanvasDrawing.drawShape(context, stroke, false);\r\n            this.$refs.VueCanvasDrawing.images.push(stroke);\r\n            break;\r\n          case \"length\":\r\n            stroke.type = \"line\";\r\n            coordi = this.getOne2Web(m.scene_pos.start.x, m.scene_pos.start.y);\r\n            stroke.from.x = coordi.x;\r\n            stroke.from.y = coordi.y;\r\n            coordi = this.getOne2Web(m.scene_pos.end.x, m.scene_pos.end.y);\r\n            stroke.coordinates.push({x: coordi.x, y: coordi.y, valueBox: m.scene_pos[\"value-box\"]});\r\n            coordi = this.getOne2Web(m.scene_pos[\"value-box\"].x, m.scene_pos[\"value-box\"].y);\r\n            distance = this.getDistance([{x: m.scene_pos.start.x, y: m.scene_pos.start.y},\r\n              {x: m.scene_pos.end.x, y: m.scene_pos.end.y}]);\r\n            // 단위 표시하기\r\n            context.font = \"15px serif\"\r\n            context.textAlign = \"start\"\r\n            context.textBaseline = \"alphabetic\";\r\n            context.fillStyle = \"#ffff00\";\r\n            context.fillText(distance, coordi.x, coordi.y);\r\n            this.$refs.VueCanvasDrawing.drawShape(context, stroke, false);\r\n            this.$refs.VueCanvasDrawing.images.push(stroke);\r\n            // 선과 단위 잇기, 구현 중\r\n            break;\r\n          case \"multi-length\":\r\n            stroke.type = \"tapeline\";\r\n            coordi = this.getOne2Web(m.scene_pos['control-points'][0].x, m.scene_pos['control-points'][0].y);\r\n            stroke.from.x = coordi.x;\r\n            stroke.from.y = coordi.y;\r\n            m.scene_pos['control-points'].forEach(p => {\r\n              coordi = this.getOne2Web(p.x, p.y);\r\n              stroke.coordinates.push({x: coordi.x, y: coordi.y});\r\n            })\r\n            coordi = this.getOne2Web(m.scene_pos[\"value-box\"].x, m.scene_pos[\"value-box\"].y);\r\n            distance = this.getDistance(m.scene_pos['control-points']);\r\n            // 단위 표시하기\r\n            context.font = \"15px serif\"\r\n            context.textAlign = \"start\"\r\n            context.textBaseline = \"alphabetic\";\r\n            context.fillStyle = \"#ffff00\";\r\n            context.fillText(distance, coordi.x, coordi.y);\r\n            this.$refs.VueCanvasDrawing.drawShape(context, stroke, false);\r\n            this.$refs.VueCanvasDrawing.images.push(stroke);\r\n            break;\r\n        }\r\n      })\r\n    },\r\n\r\n    // Web --> One2\r\n    async save() {\r\n      await this.getRefImage2Overlayes();\r\n      var data = {\r\n        \"manipulate\": {\"effect\": {\"invert\": this.second.inverse, \"sharpen\": 0}, \"windowing\": {\"wc\": 1000, \"ww\": 4000}},\r\n        \"overlaies\": this.overlayes\r\n      }\r\n\r\n      // const obj = JSON.parse(json);\r\n      const s = JSON.stringify(data);\r\n      axios({\r\n        url: drf.patient.saveDrwingMarker('1.2.410.200062.2.1.20221222144825737.86.125615.843.799'),\r\n        method: 'post',\r\n        data: s\r\n      })\r\n    },\r\n\r\n    // async setImage(event) {\r\n    //   let URL = window.URL;\r\n    //   this.backgroundImage = URL.createObjectURL(event.target.files[0]);\r\n    //   await this.$refs.VueCanvasDrawing.redraw();\r\n    // },\r\n\r\n    getCoordinate(event) {\r\n      let coordinates = this.$refs.VueCanvasDrawing.getCoordinates(event);\r\n      this.x = coordinates.x;\r\n      this.y = coordinates.y;\r\n    },\r\n\r\n    getOne2Web(coordiX, coordiY) {\r\n      return {x: coordiX * this.rated + this.maginLeft, y: coordiY * this.rated + this.canvasHeight};\r\n    },\r\n\r\n    getWeb2One(coordiX, coordiY) {\r\n      return {x: (coordiX - this.maginLeft) / this.rated, y: (coordiY - this.canvasHeight) / this.rated};\r\n    },\r\n\r\n    /***\r\n     * Canvas     => One2         pen.style\r\n     * line       => length         0\r\n     * tapeline   => multi-length\r\n     * angle      => angle          0\r\n     * arrow      => arrow          1\r\n     * ellipse    => circle         1\r\n     * rectangle  => square         1\r\n     * dash       => freedraw       1\r\n     * */\r\n    // Web --> One2\r\n    getRefImage2Overlayes() {\r\n      this.$refs.VueCanvasDrawing.images.forEach(e => {\r\n        console.log(e);\r\n        const data = {\"style\": {}};\r\n        let coordi, coordi2;\r\n        const scene_pos = {};\r\n        const start = {}, end = {}\r\n        const value_box = {};\r\n        let dataType;\r\n        let newArr;\r\n        switch (e.type) {\r\n          case \"dash\":\r\n            newArr = e.coordinates.map(c => {\r\n              coordi = this.getWeb2One(c.x, c.y);\r\n              return {x: coordi.x, y: coordi.y};\r\n            })\r\n            scene_pos[\"control-points\"] = newArr;\r\n            data[\"style\"][\"brush\"] = {\"color\": \"#00ffffff\"};\r\n            dataType = \"freedraw\";\r\n            break;\r\n          case \"line\":\r\n            coordi = this.getWeb2One(e.from.x, e.from.y);\r\n            start[\"x\"] = coordi.x;\r\n            start[\"y\"] = coordi.y;\r\n            coordi = this.getWeb2One(e.coordinates[0].x, e.coordinates[0].y);\r\n            end[\"x\"] = coordi.x;\r\n            end[\"y\"] = coordi.y;\r\n            value_box[\"x\"] = e.coordinates[0].valueBox.x;\r\n            value_box[\"y\"] = e.coordinates[0].valueBox.y;\r\n            scene_pos[\"start\"] = start;\r\n            scene_pos[\"end\"] = end;\r\n            scene_pos[\"value-box\"] = value_box;\r\n            data[\"style\"][\"value-box\"] = {\r\n              \"brush\": {\"color\": \"#00ffffff\"},\r\n              \"pen\": {\"cap\": 32, \"color\": \"#00ffffff\", \"join\": 128, \"style\": 0, \"width\": 0},\r\n              \"text\": {\"color\": \"#ffffd700\", \"font-size\": 12}\r\n            };\r\n            dataType = \"length\";\r\n            break;\r\n          case \"tapeline\":\r\n            break;\r\n          case \"angle\":\r\n            break;\r\n          case \"arrow\":\r\n            coordi = this.getWeb2One(e.from.x, e.from.y);\r\n            start[\"x\"] = coordi.x;\r\n            start[\"y\"] = coordi.y;\r\n            coordi = this.getWeb2One(e.coordinates[0].x, e.coordinates[0].y);\r\n            end[\"x\"] = coordi.x;\r\n            end[\"y\"] = coordi.y;\r\n            scene_pos[\"start\"] = start;\r\n            scene_pos[\"end\"] = end;\r\n            data[\"style\"][\"brush\"] = {\"color\": \"#00ffffff\"};\r\n            dataType = \"arrow\";\r\n            break;\r\n          case \"circle\":\r\n            coordi = this.getWeb2One(e.coordinates[0].x - e.coordinates[1].x, e.coordinates[0].y - e.coordinates[1].y);\r\n            coordi2 = this.getWeb2One(e.coordinates[0].x + e.coordinates[1].x, e.coordinates[0].y + e.coordinates[1].y);\r\n            scene_pos[\"bottom\"] = coordi2.y;\r\n            scene_pos[\"left\"] = coordi.x;\r\n            scene_pos[\"right\"] = coordi2.x;\r\n            scene_pos[\"top\"] = coordi.y;\r\n            data[\"style\"][\"brush\"] = {\"color\": \"#00ffffff\"};\r\n            dataType = \"ellipse\";\r\n            break;\r\n          case \"square\":\r\n            // from:: 시작점, left - top\r\n            coordi = this.getWeb2One(e.coordinates[3].x, e.coordinates[3].y);\r\n            coordi2 = this.getWeb2One(e.coordinates[1].x, e.coordinates[1].y);\r\n            scene_pos[\"bottom\"] = coordi2.y;\r\n            scene_pos[\"left\"] = coordi.x;\r\n            scene_pos[\"right\"] = coordi2.x;\r\n            scene_pos[\"top\"] = coordi.y;\r\n            data[\"style\"][\"brush\"] = {\"color\": \"#00ffffff\"};\r\n            dataType = \"rectangle\";\r\n            break;\r\n        }\r\n\r\n        if (e.coordinates.length !== 0) {\r\n          // 1. scene_pos\r\n          data[\"scene_pos\"] = scene_pos;\r\n          // 2. style\r\n          data[\"style\"][\"pen\"] = {\r\n            \"cap\": 32,\r\n            \"color\": '#ff' + e.color.substring(1),\r\n            \"join\": 128,\r\n            \"style\": 1,\r\n            \"width\": e.width\r\n          };\r\n          // 3. transformation\r\n          data[\"transformation\"] = {\"rot_deg\": 0};\r\n          // 4. type\r\n          data[\"type\"] = dataType;\r\n          console.log(data);\r\n          this.overlayes.push(data);\r\n        }\r\n      })\r\n    },\r\n\r\n    ...mapActions([\r\n      Constant.GET_PATIENTSERIESLIST,\r\n    ]),\r\n  },\r\n}\r\n</script>\r\n\r\n<style>\r\n.baseHeaderView {\r\n  background-color: black;\r\n  width: 100%;\r\n  height: calc(100% - 80px);\r\n  display: flex;\r\n}\r\n\r\n.baseUtilityView {\r\n  /* debug용 */\r\n  background-color: black;\r\n  height: 100%;\r\n  width: 100%;\r\n  position: relative;\r\n  /*justify-content: flex-start;*/\r\n  /*overflow: auto;*/\r\n\r\n  justify-content: center;\r\n  overflow: hidden;\r\n}\r\n\r\n.mainImg {\r\n  position: absolute;\r\n  object-fit: contain;\r\n  height: calc(1px * v-bind(screenHeight));\r\n  width: calc(1px * v-bind(screenWidth));\r\n  top: calc(1px * v-bind(movingTop));\r\n  left: calc(1px * v-bind(movingLeft));\r\n}\r\n\r\n.isToggle {\r\n  border: solid 2px blue;\r\n}\r\n\r\n.utilityEvent {\r\n  /*overflow: hidden;*/\r\n  /* 2-1, 2-2, */\r\n  filter: brightness(calc(1% * v-bind(brightness))) invert(calc(1% * v-bind(inverse)));\r\n\r\n  /* 1-2, 4-1, 4-2, 4-3, 4-4 */\r\n  transform: scale(v-bind('scale')) rotate(calc(1deg * v-bind(ang))) rotateX(calc(1deg * v-bind(rotX))) rotateY(calc(1deg * v-bind(rotY)));\r\n}\r\n\r\n/* 2-3 */\r\n.sharpen {\r\n  image-rendering: pixelated;\r\n}\r\n\r\n.canvasEvent {\r\n  height: calc(1px * v-bind(canvasHeight));\r\n  /*height: 1000px;*/\r\n  width: calc(1px * v-bind(canvasWidth));\r\n  /*width: 1000px;*/\r\n\r\n  /*z-index: 10;*/\r\n  border: solid 1px #FF0000;\r\n  position: absolute;\r\n  /*top: calc(-1px * (v-bind(maginTop) - v-bind(movingTop)));*/\r\n  /*left: calc(1px * v-bind(movingLeft));*/\r\n  top: calc(1px * v-bind(movingTop));\r\n  left: calc(1px * v-bind(movingLeft));\r\n\r\n  transform: scale(v-bind('scale')) rotate(calc(1deg * v-bind(ang))) rotateX(calc(1deg * v-bind(rotX))) rotateY(calc(1deg * v-bind(rotY)));\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}